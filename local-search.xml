<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>JavaScript学习笔记</title>
    <link href="/2021/02/17/JavaScript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <url>/2021/02/17/JavaScript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>专注于语言本身。  </p><p>每天都会有收获。  </p><p>本着兴趣爱好踏入的领域。  </p><p>我将会在这里记录我的JavaScript学习历程，途中的困难，解决的办法和得到的收获。  </p><p>我先会完成本日部分学习之后，再进行梳理与总结。</p><hr><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><hr><h3 id="JavaScript基础知识"><a href="#JavaScript基础知识" class="headerlink" title="JavaScript基础知识"></a>JavaScript基础知识</h3><h4 id="1-现代模式，”use-strict”"><a href="#1-现代模式，”use-strict”" class="headerlink" title="1.现代模式，”use strict”"></a>1.现代模式，”use strict”</h4><h4 id="2-变量"><a href="#2-变量" class="headerlink" title="2.变量"></a>2.变量</h4><p>变量应当以一种容易理解变量内部是什么的方式进行命名。</p><p>使用 <code>var</code>、<code>let</code> 或 <code>const</code> 声明变量来存储数据。</p><ul><li><code>let</code> — 现代的变量声明方式。</li><li><code>var</code> — 老旧的变量声明方式。</li><li><code>const</code> — 类似于 <code>let</code>，但是变量的值无法被修改。  </li></ul><h4 id="3-数据类型"><a href="#3-数据类型" class="headerlink" title="3.数据类型"></a>3.数据类型</h4><p>JavaScript 中有八种基本的数据类型，前七种为基本数据类型，也称为原始类型，而 <code>object</code> 为复杂数据类型</p><ul><li><code>number</code> 用于任何类型的数字：整数或浮点数，在 ±(253-1) 范围内的整数。</li><li><code>bigint</code> 用于任意长度的整数。</li><li><code>string</code> 用于字符串：一个字符串可以包含 0 个或多个字符，所以没有单独的单字符类型。</li><li><code>boolean</code> 用于 <code>true</code> 和 <code>false</code>。</li><li><code>null</code> 用于未知的值 —— 只有一个 null 值的独立类型。</li><li><code>undefined</code> 用于未定义的值 —— 只有一个 <code>undefined</code> 值的独立类型。</li><li><code>symbol</code> 用于唯一的标识符。</li><li><code>object</code> 用于更复杂的数据结构。    </li></ul><p>可以通过 <code>typeof</code> 运算符查看存储在变量中的数据类型。</p><ul><li>两种形式：<code>typeof x</code> 或者 <code>typeof(x)</code>。</li><li>以字符串的形式返回类型名称，例如 <code>&quot;string&quot;</code>。</li><li><code>typeof null</code> 会返回 <code>&quot;object&quot;</code> —— 这是 JavaScript 编程语言的一个错误，实际上它并不是一个 <code>object</code>。</li></ul><h4 id="4-交互"><a href="#4-交互" class="headerlink" title="4.交互"></a>4.交互</h4><p>用户交互的 3 个浏览器的特定函数：</p><ul><li><p><strong>alert</strong></p>  <figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">alert(<span class="hljs-string">&#x27;Hello!&#x27;</span>); <span class="hljs-comment">//显示信息。</span><br></code></pre></div></td></tr></table></figure></li><li><p><strong>prompt</strong><br>  <code>prompt</code> 函数接收两个参数：</p>  <figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">result = prompt(title, [<span class="hljs-keyword">default</span>]); <br></code></pre></div></td></tr></table></figure><p>  显示信息要求用户输入文本。<br>  <code>title</code></p><p>  显示给用户的文本(可选)<br>  <code>default</code></p><p>  点击确定返回文本，点击取消或按下 Esc 键返回 null。</p></li><li><p><strong>confirm</strong></p><p>  <code>confirm</code> 函数显示一个带有 <code>question</code> 以及确定和取消两个按钮的模态窗口。  </p>  <figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">result = confirm(question);<br></code></pre></div></td></tr></table></figure><p>  点击确定返回 <code>true</code>，点击取消返回 <code>false</code>。</p></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>利用Hexo与GitHub Pages搭建Blog</title>
    <link href="/2021/02/16/Hexo/"/>
    <url>/2021/02/16/Hexo/</url>
    
    <content type="html"><![CDATA[<blockquote><p>本文将介绍如何使用Hexo与GitHub Pages搭建Blog。  </p></blockquote><h2 id="Hexo简介"><a href="#Hexo简介" class="headerlink" title="Hexo简介"></a>Hexo简介</h2><p>Hexo是一款基于Node.js的静态博客框架<a id="more"></a>，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Coding上，是搭建博客的首选框架。可以进入<a href="https://hexo.io/zh-cn/">Hexo官网</a>进行详细查看，因为Hexo的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看。</p><h2 id="Blog搭建步骤"><a href="#Blog搭建步骤" class="headerlink" title="Blog搭建步骤"></a>Blog搭建步骤</h2><p><strong>1. <a href="#1-%E5%AE%89%E8%A3%85Git">安装Git</a></strong><br><strong>2. <a href="#2-%E5%AE%89%E8%A3%85Node-js">安装Node.js</a></strong><br><strong>3. <a href="#3-%E5%AE%89%E8%A3%85Hexo">安装Hexo</a></strong><br><strong>4. <a href="#4-Hexo%E6%8C%87%E4%BB%A4">Hexo命令</a></strong><br><strong>5. <a href="#5-%E8%AE%BE%E7%BD%AESSH">设置SSH</a></strong><br><strong>6. <a href="#6-%E5%88%9B%E5%BB%BA%E5%BA%93">创建库</a></strong><br><strong>7. <a href="#7-%E9%83%A8%E7%BD%B2GitHub-Pages">部署GitHub Pages</a></strong></p><h3 id="1-安装Git"><a href="#1-安装Git" class="headerlink" title="1.安装Git"></a>1.安装Git</h3><ul><li><p><strong>Windows：</strong><a href="https://git-scm.com/download/win">Git官网</a>下载并安装</p></li><li><p><strong>Linux：</strong> (Ubuntu, Debian)：</p><figure class="highlight routeros"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs routeros">- sudo apt-<span class="hljs-builtin-name">get</span> install git<br></code></pre></div></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> git --version <span class="hljs-comment">#检查版本</span></span><br></code></pre></div></td></tr></table></figure><blockquote><p><strong>Windows 用户</strong></p><p>中国大陆地区用户可以前往 <a href="https://npm.taobao.org/mirrors/git-for-windows/">淘宝 Git for Windows 镜像</a> 下载 Git 安装包。</p></blockquote></li></ul><h3 id="2-安装Node-js"><a href="#2-安装Node-js" class="headerlink" title="2.安装Node.js"></a>2.安装Node.js</h3><ul><li><p><strong>Windows：</strong><a href="https://nodejs.org/en/">Node.js官网</a>下载并安装</p></li><li><p><strong>Linux：</strong> (Ubuntu, Debian)：</p><figure class="highlight routeros"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs routeros">- sudo apt-<span class="hljs-builtin-name">get</span> install nodejs <br>- sudo apt-<span class="hljs-builtin-name">get</span> install npm<br></code></pre></div></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> node -v <span class="hljs-comment">#检查版本</span></span><br><span class="hljs-meta">$</span><span class="bash"> npm -v</span><br></code></pre></div></td></tr></table></figure></li></ul><h3 id="3-安装Hexo"><a href="#3-安装Hexo" class="headerlink" title="3.安装Hexo"></a>3.安装Hexo</h3><ul><li><p><strong>安装：</strong></p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> npm install -g hexo-cli</span><br></code></pre></div></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> hexo -v <span class="hljs-comment">#检查版本</span></span><br></code></pre></div></td></tr></table></figure></li><li><p><strong>初始化Hexo：</strong></p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> hexo init <span class="hljs-comment">#建站</span></span><br></code></pre></div></td></tr></table></figure></li><li><p><strong>初始化完成后，指定文件夹目录下有：</strong></p><ul><li><code>node_modules</code> 依赖包</li><li><code>public</code> 存放生成的页面</li><li><code>scaffolds</code> 生成文章的一些模板</li><li><code>source</code> 用来存放你的文章</li><li><code>themes</code> 主题</li><li><code>_config.yml</code> 博客的配置文件</li></ul></li></ul><h3 id="4-Hexo指令"><a href="#4-Hexo指令" class="headerlink" title="4.Hexo指令"></a>4.Hexo指令</h3><ul><li><p><strong>init：</strong></p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> hexo init [folder] <span class="hljs-comment">#新建一个网站，若没有设置folder则默认在目前文件夹建立网站</span></span><br></code></pre></div></td></tr></table></figure></li><li><p><strong>new：</strong></p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> hexo new [layout] &lt;title&gt; <span class="hljs-comment">#新建一篇文章</span></span><br><span class="hljs-meta">$</span><span class="bash"> hexo new <span class="hljs-string">&quot;post title with whitespace&quot;</span> <span class="hljs-comment">#如果标题包含空格的话，请使用引号括起来</span></span><br></code></pre></div></td></tr></table></figure></li><li><p><strong>server：</strong></p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> hexo s <span class="hljs-comment">#启动服务器。默认情况下，访问网址为：http://localhost:4000</span></span><br></code></pre></div></td></tr></table></figure></li><li><p><strong>clean：</strong></p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> hexo clean <span class="hljs-comment">#清除缓存文件 (db.json) 和已生成的静态文件 (public)</span></span><br></code></pre></div></td></tr></table></figure></li><li><p><strong>generate：</strong></p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> hexo g <span class="hljs-comment">#生成静态文件</span></span><br></code></pre></div></td></tr></table></figure></li><li><p><strong>deploy：</strong></p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> hexo d <span class="hljs-comment">#部署网站</span></span><br></code></pre></div></td></tr></table></figure></li></ul><h3 id="5-设置SSH"><a href="#5-设置SSH" class="headerlink" title="5.设置SSH"></a>5.设置SSH</h3><ul><li><strong>设置用户名和Email地址：</strong><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> git config --global user.name <span class="hljs-string">&quot;yourname&quot;</span>  <span class="hljs-comment">#GitHub user</span></span><br><span class="hljs-meta">$</span><span class="bash"> git config --global user.email <span class="hljs-string">&quot;youremail&quot;</span> <span class="hljs-comment">#GitHub email</span></span><br><span class="hljs-meta">$</span><span class="bash"> git config -l <span class="hljs-comment">#Check</span></span><br></code></pre></div></td></tr></table></figure></li><li><strong>创建SSH：</strong><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> ssh-keygen -t rsa -C <span class="hljs-string">&quot;youremail&quot;</span> <span class="hljs-comment">#GitHub email</span></span><br></code></pre></div></td></tr></table></figure></li><li><strong>设置SSH：</strong><br>将<code>id_rsa.pub</code>密钥放在GitHub Setting中的SSH keys后继续<figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> ssh -T git@github.com <span class="hljs-comment">#Check</span></span><br></code></pre></div></td></tr></table></figure></li></ul><h3 id="6-创建库"><a href="#6-创建库" class="headerlink" title="6.创建库"></a>6.创建库</h3><ul><li><p><strong>创建项目代码库：</strong><br>Github中点击<code>New repository</code>以<code>yourname.github.io</code>为项目名新建一个项目</p></li><li><p><strong>配置GitHub Pages：</strong><br>进入Settings页Options项找到GitHub Pages并开启</p></li></ul><h3 id="7-部署Github-Pages"><a href="#7-部署Github-Pages" class="headerlink" title="7.部署Github Pages"></a>7.部署Github Pages</h3><ul><li><strong>设置<code>_config.yml</code>配置文件：</strong><br>在配置文件末加上：<figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">deploy:<br>  type: git<br>  repository: git@github.com:yourname/yourname.github.io.git<br>  branch: master<br></code></pre></div></td></tr></table></figure></li><li><strong>安装Git依赖项：</strong><figure class="highlight ada"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ada">$ npm install <span class="hljs-comment">--save hexo-deployer-git</span><br></code></pre></div></td></tr></table></figure></li><li><strong>部署：</strong><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> hexo clean <span class="hljs-comment">#清除缓存文件</span></span><br><span class="hljs-meta">$</span><span class="bash"> hexo g <span class="hljs-comment">#生成静态文件</span></span><br><span class="hljs-meta">$</span><span class="bash"> hexo d <span class="hljs-comment">#部署网站</span></span><br></code></pre></div></td></tr></table></figure></li></ul><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>  本站是使用 <a href="https://hexo.io/zh-cn/">Hexo 框架</a> +  <a href="https://github.com/fluid-dev/hexo-theme-fluid">Fluid 主题</a>搭建。        </p><p>  如果你跟着这篇不那么详尽的教程，成功搭建了自己的博客，恭喜你！剩下的就是保持热情的去写自己的文章吧。   </p><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul><li><strong><a href="https://hexo.io/zh-cn/docs/">Hexo</a></strong></li><li><strong><a href="https://docs.github.com/en/github/working-with-github-pages">GitHub Pages</a></strong></li></ul><hr>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>GitHub</tag>
      
      <tag>Blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
